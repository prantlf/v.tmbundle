<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>v</string>
		<string>vh</string>
		<string>vsh</string>
		<string>vv</string>
		<string>v.mod</string>
	</array>
	<key>comment</key>
	<string>V Syntax version 0.0.1</string>
	<key>name</key>
	<string>V</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#as-is</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#attributes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#assignment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#module-decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import-decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#hash-decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#brackets</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin-fix</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#escaped-fix</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-limited-overload-decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-extend-decl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-exist</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#generic</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#enum</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#interface</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#struct</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storage</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#punctuations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable-assign</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-decl</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>as-is</key>
		<dict>
			<key>begin</key>
			<string>\s+(as|is)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.$1.v</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\w.]*)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.alias.v</string>
				</dict>
			</dict>
		</dict>
		<key>assignment</key>
		<dict>
			<key>name</key>
			<string>meta.definition.variable.v</string>
			<key>match</key>
			<string>\s+((?:\:|\+|\-|\*|/|\%|\&amp;|\||\^)?=)\s+</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#operators</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>attributes</key>
		<dict>
			<key>name</key>
			<string>meta.definition.attribute.v</string>
			<key>match</key>
			<string>^\s*((\[)(deprecated|unsafe|console|heap|manualfree|typedef|live|inline|flag|ref_only|direct_array_access|callconv)(\]))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function.attribute.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.begin.bracket.square.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.attribute.v</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.end.bracket.square.v</string>
				</dict>
			</dict>
		</dict>
		<key>variable-assign</key>
		<dict>
			<key>match</key>
			<string>[a-zA-Z_]\w*(?:,\s*[a-zA-Z_]\w*)*(?=\s*(?:=|:=))</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[a-zA-Z_]\w*</string>
							<key>name</key>
							<string>variable.other.assignment.v</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>module-decl</key>
		<dict>
			<key>name</key>
			<string>meta.module.v</string>
			<key>begin</key>
			<string>^\s*(module)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.module.v</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\w.]+)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.module.v</string>
				</dict>
			</dict>
		</dict>
		<key>import-decl</key>
		<dict>
			<key>name</key>
			<string>meta.import.v</string>
			<key>begin</key>
			<string>^\s*(import)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.import.v</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\w.]+)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.import.v</string>
				</dict>
			</dict>
		</dict>
		<key>hash-decl</key>
		<dict>
			<key>name</key>
			<string>markup.bold.v</string>
			<key>begin</key>
			<string>^\s*(#)</string>
			<key>end</key>
			<string>$</string>
		</dict>
		<key>brackets</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.begin.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.end.v</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.begin.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.round.end.v</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.begin.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.square.end.v</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>builtin-fix</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>storage.modifier.v</string>
							<key>match</key>
							<string>(const)(?=\s*\()</string>
						</dict>
						<dict>
							<key>name</key>
							<string>keyword.$1.v</string>
							<key>match</key>
							<string>\b(fn|type|enum|struct|union|interface|map|assert|sizeof|typeof|__offsetof)\b(?=\s*\()</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>keyword.control.v</string>
							<key>match</key>
							<string>(\$if|\$else)(?=\s*\()</string>
						</dict>
						<dict>
							<key>name</key>
							<string>keyword.control.v</string>
							<key>match</key>
							<string>\b(as|in|is|or|break|continue|default|unsafe|match|if|else|for|go|spawn|goto|defer|return|shared|select|rlock|lock|atomic|asm)\b(?=\s*\()</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;!.)(i?(?:8|16|nt|64|128)|u?(?:16|32|64|128)|f?(?:32|64))(?=\s*\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.numeric.v</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.expr.numeric.cast.v</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(bool|byte|byteptr|charptr|voidptr|string|rune|size_t|[ui]size)(?=\s*\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.$1.v</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.expr.bool.cast.v</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.block.documentation.v</string>
					<key>begin</key>
					<string>/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.v</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.line.double-slash.v</string>
					<key>begin</key>
					<string>//</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>name</key>
			<string>constant.language.v</string>
			<key>match</key>
			<string>\b(true|false|none)\b</string>
		</dict>
		<key>generic</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.definition.generic.v</string>
					<key>match</key>
					<string>(?&lt;=[\w\s+])(\&lt;)(\w+)(\&gt;)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.angle.begin.v</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#illegal-name</string>
								</dict>
								<dict>
									<key>match</key>
									<string>\w+</string>
									<key>name</key>
									<string>entity.name.generic.v</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.angle.end.v</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>function-decl</key>
		<dict>
			<key>name</key>
			<string>meta.definition.function.v</string>
			<key>match</key>
			<string>^(\bpub\b\s+)?(\bfn\b)\s+(?:\([^\)]+\)\s+)?(?:(?:C\.)?)(\w+)\s*((?&lt;=[\w\s+])(\&lt;)(\w+)(\&gt;))?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.fn.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.v</string>
				</dict>
				<key>4</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>function-extend-decl</key>
		<dict>
			<key>name</key>
			<string>meta.definition.function.v</string>
			<key>match</key>
			<string>^\s*(pub)?\s*(fn)\s*(\()([^\)]*)(\))\s*(?:(?:C\.)?)(\w+)\s*((?&lt;=[\w\s+])(\&lt;)(\w+)(\&gt;))?</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.fn.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.begin.v</string>
				</dict>
				<key>4</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#brackets</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.end.v</string>
				</dict>
				<key>6</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-name</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\w+</string>
							<key>name</key>
							<string>entity.name.function.v</string>
						</dict>
					</array>
				</dict>
				<key>7</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>function-limited-overload-decl</key>
		<dict>
			<key>name</key>
			<string>meta.definition.function.v</string>
			<key>match</key>
			<string>^\s*(pub)?\s*(fn)\s*(\()([^\)]*)(\))\s*([\+\-\*\/])?\s*(\()([^\)]*)(\))\s*(?:(?:C\.)?)(\w+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.fn.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.begin.v</string>
				</dict>
				<key>4</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#brackets</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.end.v</string>
				</dict>
				<key>6</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#operators</string>
						</dict>
					</array>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.begin.v</string>
				</dict>
				<key>8</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#brackets</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.bracket.round.end.v</string>
				</dict>
				<key>10</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-name</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\w+</string>
							<key>name</key>
							<string>entity.name.function.v</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>function-exist</key>
		<dict>
			<key>name</key>
			<string>meta.support.function.v</string>
			<key>match</key>
			<string>(\w+)((?&lt;=[\w\s+])(\&lt;)(\w+)(\&gt;))?(?=\s*\()</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.function.call.v</string>
				</dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-name</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\w+</string>
							<key>name</key>
							<string>entity.name.function.v</string>
						</dict>
					</array>
				</dict>
				<key>2</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#generic</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>type</key>
		<dict>
			<key>name</key>
			<string>meta.definition.type.v</string>
			<key>match</key>
			<string>^\s*(?:(pub)?\s+)?(type)\s+(\w*)\s+(?:\w+\.+)?(\w*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.$1.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.type.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>name</key>
							<string>entity.name.type.v</string>
							<key>match</key>
							<string>\w+</string>
						</dict>
					</array>
				</dict>
				<key>4</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>name</key>
							<string>entity.name.type.v</string>
							<key>match</key>
							<string>\w+</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>enum</key>
		<dict>
			<key>name</key>
			<string>meta.definition.enum.v</string>
			<key>match</key>
			<string>^\s*(?:(pub)?\s+)?(enum)\s+(?:\w+\.)?(\w*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.$1.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.enum.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.enum.v</string>
				</dict>
			</dict>
		</dict>
		<key>interface</key>
		<dict>
			<key>name</key>
			<string>meta.definition.interface.v</string>
			<key>match</key>
			<string>^\s*(?:(pub)?\s+)?(interface)\s+(\w*)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.$1.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.interface.v</string>
				</dict>
				<key>3</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal-name</string>
						</dict>
						<dict>
							<key>name</key>
							<string>entity.name.interface.v</string>
							<key>match</key>
							<string>\w+</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>struct</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>meta.definition.struct.v</string>
					<key>begin</key>
					<string>^\s*(?:(mut|pub(?:\s+mut)?|__global)\s+)?(struct|union)\s+([\w.]+)\s*|({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.$1.v</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.struct.v</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.v</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.begin.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\s*|(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.bracket.curly.end.v</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#struct-access-modifier</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(\w+)\s+([\w\[\]\*&amp;.]+)(?:\s*(=)\s*((?:.(?=$|//|/\*))*+))?</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.other.property.v</string>
								</dict>
								<key>2</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#numbers</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#brackets</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#types</string>
										</dict>
										<dict>
											<key>match</key>
											<string>\w+</string>
											<key>name</key>
											<string>storage.type.other.v</string>
										</dict>
									</array>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.v</string>
								</dict>
								<key>4</key>
								<dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>$self</string>
										</dict>
									</array>
								</dict>
							</dict>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>name</key>
					<string>meta.definition.struct.v</string>
					<key>match</key>
					<string>^\s*(?:(mut|pub(?:\s+mut)?|__global))\s+?(struct)\s+(?:\s+([\w.]+))?</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.$1.v</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.struct.v</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.struct.v</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>
		<key>struct-access-modifier</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=\s|^)(mut|pub(?:\s+mut)?|__global)(:|\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.$1.v</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.struct.key-value.v</string>
				</dict>
			</dict>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.delimiter.period.dot.v</string>
					<key>match</key>
					<string>\.</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.delimiter.comma.v</string>
					<key>match</key>
					<string>,</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.colon.v</string>
					<key>match</key>
					<string>:</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.definition.other.semicolon.v</string>
					<key>match</key>
					<string>;</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.definition.other.questionmark.v</string>
					<key>match</key>
					<string>\?</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.hash.v</string>
					<key>match</key>
					<string>#</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.control.v</string>
					<key>match</key>
					<string>(\$if|\$else)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.control.v</string>
					<key>match</key>
					<string>(?&lt;!@)\b(as|it|is|in|or|break|continue|default|unsafe|match|if|else|for|go|spawn|goto|defer|return|shared|select|rlock|lock|atomic|asm)\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.$1.v</string>
					<key>match</key>
					<string>(?&lt;!@)\b(fn|type|typeof|enum|struct|interface|map|assert|sizeof|__offsetof)\b</string>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>name</key>
			<string>storage.modifier.v</string>
			<key>match</key>
			<string>\b(const|mut|pub)\b</string>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>storage.type.numeric.v</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(i(8|16|nt|64|128)|u(8|16|32|64|128)|f(32|64))\b</string>
				</dict>
				<dict>
					<key>name</key>
					<string>storage.type.$1.v</string>
					<key>match</key>
					<string>(?&lt;!\.)\b(bool|byte|byteptr|charptr|voidptr|string|ustring|rune)\b</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.v</string>
					<key>match</key>
					<string>(\+|\-|\*|\/|\%|\+\+|\-\-|\&gt;\&gt;|\&lt;\&lt;)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.relation.v</string>
					<key>match</key>
					<string>(\=\=|\!\=|\&gt;|\&lt;|\&gt;\=|\&lt;\=)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.v</string>
					<key>match</key>
					<string>(\:\=|\=|\+\=|\-\=|\*\=|\/\=|\%\=|\&amp;\=|\|\=|\^\=|\~\=|\&amp;\&amp;\=|\|\|\=|\&gt;\&gt;\=|\&lt;\&lt;\=)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.bitwise.v</string>
					<key>match</key>
					<string>(\&amp;|\||\^|\~|&lt;(?!&lt;)|&gt;(?!&gt;))</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.v</string>
					<key>match</key>
					<string>(\&amp;\&amp;|\|\||\!)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.operator.optional.v</string>
					<key>match</key>
					<string>\?</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.numeric.exponential.v</string>
					<key>match</key>
					<string>([0-9]+(_?))+(\.)([0-9]+[eE][-+]?[0-9]+)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.float.v</string>
					<key>match</key>
					<string>([0-9]+(_?))+(\.)([0-9]+)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.binary.v</string>
					<key>match</key>
					<string>(?:0b)(?:(?:[0-1]+)(?:_?))+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.octal.v</string>
					<key>match</key>
					<string>(?:0o)(?:(?:[0-7]+)(?:_?))+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.hex.v</string>
					<key>match</key>
					<string>(?:0x)(?:(?:[0-9a-fA-F]+)(?:_?))+</string>
				</dict>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.v</string>
					<key>match</key>
					<string>(?:(?:[0-9]+)(?:[_]?))+</string>
				</dict>
			</array>
		</dict>
		<key>punctuations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>punctuation.accessor.v</string>
					<key>match</key>
					<string>(?:\.)</string>
				</dict>
				<dict>
					<key>name</key>
					<string>punctuation.separator.comma.v</string>
					<key>match</key>
					<string>(?:,)</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>name</key>
					<string>string.quoted.rune.v</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escaped-char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-placeholder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)'</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.raw.v</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-placeholder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)"</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.raw.v</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-placeholder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(c?)'</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.v</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escaped-char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-placeholder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(c?)"</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.v</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.v</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escaped-char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-placeholder</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string-escaped-char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.character.escape.v</string>
					<key>match</key>
					<string>\\([0-7]{3}|[\$abfnrtv\\'"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})</string>
				</dict>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.v</string>
					<key>match</key>
					<string>\\[^0-7\$xuUabfnrtv\'"]</string>
				</dict>
			</array>
		</dict>
		<key>string-interpolation</key>
		<dict>
			<key>name</key>
			<string>meta.string.interpolation.v</string>
			<key>match</key>
			<string>(\$([\w.]+|\{.*?\}))</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>invalid.illegal.v</string>
							<key>match</key>
							<string>\$\d[\.\w]+</string>
						</dict>
						<dict>
							<key>name</key>
							<string>variable.other.interpolated.v</string>
							<key>match</key>
							<string>\$([\.\w]+|\{.*?\})</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>string-placeholder</key>
		<dict>
			<key>match</key>
			<string>%(\[\d+\])?([\+#\-0\x20]{,2}((\d+|\*)?(\.?(\d+|\*|(\[\d+\])\*?)?(\[\d+\])?)?))?[vT%tbcdoqxXUbeEfFgGsp]</string>
			<key>name</key>
			<string>constant.other.placeholder.v</string>
		</dict>
		<key>illegal-name</key>
		<dict>
			<key>match</key>
			<string>\d\w+</string>
			<key>name</key>
			<string>invalid.illegal.v</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.v</string>
	<key>uuid</key>
	<string>023E3973-4C6A-47FA-8DA1-064AFFB249B7</string>
</dict>
</plist>
